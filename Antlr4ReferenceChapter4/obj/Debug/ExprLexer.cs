//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\chris.small\Documents\GitHub\Antlr4ReferenceChapter4\Antlr4ReferenceChapter4\Expr.g4 by ANTLR 4.2.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace AntlrChapter4 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class ExprLexer : Lexer {
	public const int
		T__2=1, T__1=2, T__0=3, MUL=4, DIV=5, ADD=6, SUB=7, ID=8, INT=9, NEWLINE=10, 
		WS=11;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"<INVALID>",
		"')'", "'('", "'='", "'*'", "'/'", "'+'", "'-'", "ID", "INT", "NEWLINE", 
		"WS"
	};
	public static readonly string[] ruleNames = {
		"T__2", "T__1", "T__0", "MUL", "DIV", "ADD", "SUB", "ID", "INT", "NEWLINE", 
		"WS"
	};


	public ExprLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "Expr.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\r=\b\x1\x4\x2\t"+
		"\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4\t"+
		"\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3"+
		"\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x6\t)\n\t\r\t\xE\t*\x3"+
		"\n\x6\n.\n\n\r\n\xE\n/\x3\v\x5\v\x33\n\v\x3\v\x3\v\x3\f\x6\f\x38\n\f\r"+
		"\f\xE\f\x39\x3\f\x3\f\x2\x2\x2\r\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2"+
		"\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x3\x2\x5\x4\x2\x43"+
		"\\\x63|\x3\x2\x32;\x4\x2\v\v\"\"@\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2"+
		"\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2"+
		"\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2"+
		"\x2\x2\x17\x3\x2\x2\x2\x3\x19\x3\x2\x2\x2\x5\x1B\x3\x2\x2\x2\a\x1D\x3"+
		"\x2\x2\x2\t\x1F\x3\x2\x2\x2\v!\x3\x2\x2\x2\r#\x3\x2\x2\x2\xF%\x3\x2\x2"+
		"\x2\x11(\x3\x2\x2\x2\x13-\x3\x2\x2\x2\x15\x32\x3\x2\x2\x2\x17\x37\x3\x2"+
		"\x2\x2\x19\x1A\a+\x2\x2\x1A\x4\x3\x2\x2\x2\x1B\x1C\a*\x2\x2\x1C\x6\x3"+
		"\x2\x2\x2\x1D\x1E\a?\x2\x2\x1E\b\x3\x2\x2\x2\x1F \a,\x2\x2 \n\x3\x2\x2"+
		"\x2!\"\a\x31\x2\x2\"\f\x3\x2\x2\x2#$\a-\x2\x2$\xE\x3\x2\x2\x2%&\a/\x2"+
		"\x2&\x10\x3\x2\x2\x2\')\t\x2\x2\x2(\'\x3\x2\x2\x2)*\x3\x2\x2\x2*(\x3\x2"+
		"\x2\x2*+\x3\x2\x2\x2+\x12\x3\x2\x2\x2,.\t\x3\x2\x2-,\x3\x2\x2\x2./\x3"+
		"\x2\x2\x2/-\x3\x2\x2\x2/\x30\x3\x2\x2\x2\x30\x14\x3\x2\x2\x2\x31\x33\a"+
		"\xF\x2\x2\x32\x31\x3\x2\x2\x2\x32\x33\x3\x2\x2\x2\x33\x34\x3\x2\x2\x2"+
		"\x34\x35\a\f\x2\x2\x35\x16\x3\x2\x2\x2\x36\x38\t\x4\x2\x2\x37\x36\x3\x2"+
		"\x2\x2\x38\x39\x3\x2\x2\x2\x39\x37\x3\x2\x2\x2\x39:\x3\x2\x2\x2:;\x3\x2"+
		"\x2\x2;<\b\f\x2\x2<\x18\x3\x2\x2\x2\a\x2*/\x32\x39\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AntlrChapter4
